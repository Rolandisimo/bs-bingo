{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Word.svelte","../../src/helpers/words.ts","../../node_modules/svelte/store/index.mjs","../../src/selected-words.store.ts","../../node_modules/canvas-confetti/dist/confetti.module.mjs","../../src/helpers/bingo.ts","../../src/helpers/confetti.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n    export let name: string;\n    export let wordId: number;\n    export let isSelected: boolean;\n</script>\n\n<div\n    class=\"word\"\n    data-testid=\"word\"\n    class:selected={isSelected}\n    on:click\n    data-id={wordId}\n>\n    {name}\n</div>\n\n<style lang=\"scss\">\n    $selectedColor: rgb(196, 241, 230);\n    $hoverColor: darken($color: #fff, $amount: 5);\n    $mainLight: rgba(128, 128, 128, .28);\n\n    .word {\n        border: 0.1em solid $mainLight;\n        padding: 1em;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        text-align: center;\n        transition: background-color .1s, transform .1s;\n        \n        &:hover {\n            background-color: $hoverColor;\n        }\n        \n        &:active {\n            transform: scale(.9);\n        }\n        \n        &.selected {\n            background-color: $selectedColor;\n        }\n\n        @media (max-width: 728px) {\n            padding: 3em 1em;\n        }\n    }\n</style>\n","export const words = [\n    [\n        'OOP',\n        'Agile',\n        'Best practice',\n        'Clean code',\n        'Refactoring',\n    ],\n    [\n        'Scrum',\n        'Hack',\n        'Functional',\n        'Abstract',\n        'Motivated',\n    ],\n    [\n        'Driven',\n        'Patterns',\n        'Algorithms',\n        '80/20',\n        'Outstanding',\n    ],\n    [\n        'UML',\n        'Virtual',\n        'Cloud',\n        'Wizard',\n        'Domain',\n    ],\n    [\n        'Bug-free',\n        'Green',\n        'TDD',\n        'BDD',\n        'Extreme',\n    ],\n];\nexport const wordsPerLine = words.length;\nexport function getWordKey({ columnId, wordId }) {\n    return `${wordId}${columnId}`;\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n;\nfunction createSelectedWordsStore() {\n    let state = {};\n    const store = writable(state);\n    return Object.assign(Object.assign({}, store), { isWordSelected: (key) => {\n            var _a;\n            return (_a = state[key]) !== null && _a !== void 0 ? _a : false;\n        }, toggleWordState: (key) => {\n            store.update(() => {\n                state[key] = !state[key];\n                return state;\n            });\n        }, reset: () => {\n            state = {};\n            store.set({});\n        } });\n}\nexport const selectedWordsStore = createSelectedWordsStore();\n","// canvas-confetti v1.3.2 built on 2020-11-12T12:53:54.473Z\nvar module = {};\n\n// source content\n(function main(global, module, isWorker, workerSize) {\n  var canUseWorker = !!(\n    global.Worker &&\n    global.Blob &&\n    global.Promise &&\n    global.OffscreenCanvas &&\n    global.OffscreenCanvasRenderingContext2D &&\n    global.HTMLCanvasElement &&\n    global.HTMLCanvasElement.prototype.transferControlToOffscreen &&\n    global.URL &&\n    global.URL.createObjectURL);\n\n  function noop() {}\n\n  // create a promise if it exists, otherwise, just\n  // call the function directly\n  function promise(func) {\n    var ModulePromise = module.exports.Promise;\n    var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;\n\n    if (typeof Prom === 'function') {\n      return new Prom(func);\n    }\n\n    func(noop, noop);\n\n    return null;\n  }\n\n  var raf = (function () {\n    var TIME = Math.floor(1000 / 60);\n    var frame, cancel;\n    var frames = {};\n    var lastFrameTime = 0;\n\n    if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {\n      frame = function (cb) {\n        var id = Math.random();\n\n        frames[id] = requestAnimationFrame(function onFrame(time) {\n          if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {\n            lastFrameTime = time;\n            delete frames[id];\n\n            cb();\n          } else {\n            frames[id] = requestAnimationFrame(onFrame);\n          }\n        });\n\n        return id;\n      };\n      cancel = function (id) {\n        if (frames[id]) {\n          cancelAnimationFrame(frames[id]);\n        }\n      };\n    } else {\n      frame = function (cb) {\n        return setTimeout(cb, TIME);\n      };\n      cancel = function (timer) {\n        return clearTimeout(timer);\n      };\n    }\n\n    return { frame: frame, cancel: cancel };\n  }());\n\n  var getWorker = (function () {\n    var worker;\n    var prom;\n    var resolves = {};\n\n    function decorate(worker) {\n      function execute(options, callback) {\n        worker.postMessage({ options: options || {}, callback: callback });\n      }\n      worker.init = function initWorker(canvas) {\n        var offscreen = canvas.transferControlToOffscreen();\n        worker.postMessage({ canvas: offscreen }, [offscreen]);\n      };\n\n      worker.fire = function fireWorker(options, size, done) {\n        if (prom) {\n          execute(options, null);\n          return prom;\n        }\n\n        var id = Math.random().toString(36).slice(2);\n\n        prom = promise(function (resolve) {\n          function workerDone(msg) {\n            if (msg.data.callback !== id) {\n              return;\n            }\n\n            delete resolves[id];\n            worker.removeEventListener('message', workerDone);\n\n            prom = null;\n            done();\n            resolve();\n          }\n\n          worker.addEventListener('message', workerDone);\n          execute(options, id);\n\n          resolves[id] = workerDone.bind(null, { data: { callback: id }});\n        });\n\n        return prom;\n      };\n\n      worker.reset = function resetWorker() {\n        worker.postMessage({ reset: true });\n\n        for (var id in resolves) {\n          resolves[id]();\n          delete resolves[id];\n        }\n      };\n    }\n\n    return function () {\n      if (worker) {\n        return worker;\n      }\n\n      if (!isWorker && canUseWorker) {\n        var code = [\n          'var CONFETTI, SIZE = {}, module = {};',\n          '(' + main.toString() + ')(this, module, true, SIZE);',\n          'onmessage = function(msg) {',\n          '  if (msg.data.options) {',\n          '    CONFETTI(msg.data.options).then(function () {',\n          '      if (msg.data.callback) {',\n          '        postMessage({ callback: msg.data.callback });',\n          '      }',\n          '    });',\n          '  } else if (msg.data.reset) {',\n          '    CONFETTI.reset();',\n          '  } else if (msg.data.resize) {',\n          '    SIZE.width = msg.data.resize.width;',\n          '    SIZE.height = msg.data.resize.height;',\n          '  } else if (msg.data.canvas) {',\n          '    SIZE.width = msg.data.canvas.width;',\n          '    SIZE.height = msg.data.canvas.height;',\n          '    CONFETTI = module.exports.create(msg.data.canvas);',\n          '  }',\n          '}',\n        ].join('\\n');\n        try {\n          worker = new Worker(URL.createObjectURL(new Blob([code])));\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          typeof console !== undefined && typeof console.warn === 'function' ? console.warn('🎊 Could not load worker', e) : null;\n\n          return null;\n        }\n\n        decorate(worker);\n      }\n\n      return worker;\n    };\n  })();\n\n  var defaults = {\n    particleCount: 50,\n    angle: 90,\n    spread: 45,\n    startVelocity: 45,\n    decay: 0.9,\n    gravity: 1,\n    ticks: 200,\n    x: 0.5,\n    y: 0.5,\n    shapes: ['square', 'circle'],\n    zIndex: 100,\n    colors: [\n      '#26ccff',\n      '#a25afd',\n      '#ff5e7e',\n      '#88ff5a',\n      '#fcff42',\n      '#ffa62d',\n      '#ff36ff'\n    ],\n    // probably should be true, but back-compat\n    disableForReducedMotion: false,\n    scalar: 1\n  };\n\n  function convert(val, transform) {\n    return transform ? transform(val) : val;\n  }\n\n  function isOk(val) {\n    return !(val === null || val === undefined);\n  }\n\n  function prop(options, name, transform) {\n    return convert(\n      options && isOk(options[name]) ? options[name] : defaults[name],\n      transform\n    );\n  }\n\n  function onlyPositiveInt(number){\n    return number < 0 ? 0 : Math.floor(number);\n  }\n\n  function randomInt(min, max) {\n    // [min, max)\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  function toDecimal(str) {\n    return parseInt(str, 16);\n  }\n\n  function hexToRgb(str) {\n    var val = String(str).replace(/[^0-9a-f]/gi, '');\n\n    if (val.length < 6) {\n        val = val[0]+val[0]+val[1]+val[1]+val[2]+val[2];\n    }\n\n    return {\n      r: toDecimal(val.substring(0,2)),\n      g: toDecimal(val.substring(2,4)),\n      b: toDecimal(val.substring(4,6))\n    };\n  }\n\n  function getOrigin(options) {\n    var origin = prop(options, 'origin', Object);\n    origin.x = prop(origin, 'x', Number);\n    origin.y = prop(origin, 'y', Number);\n\n    return origin;\n  }\n\n  function setCanvasWindowSize(canvas) {\n    canvas.width = document.documentElement.clientWidth;\n    canvas.height = document.documentElement.clientHeight;\n  }\n\n  function setCanvasRectSize(canvas) {\n    var rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n  }\n\n  function getCanvas(zIndex) {\n    var canvas = document.createElement('canvas');\n\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.pointerEvents = 'none';\n    canvas.style.zIndex = zIndex;\n\n    return canvas;\n  }\n\n  function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n    context.save();\n    context.translate(x, y);\n    context.rotate(rotation);\n    context.scale(radiusX, radiusY);\n    context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);\n    context.restore();\n  }\n\n  function randomPhysics(opts) {\n    var radAngle = opts.angle * (Math.PI / 180);\n    var radSpread = opts.spread * (Math.PI / 180);\n\n    return {\n      x: opts.x,\n      y: opts.y,\n      wobble: Math.random() * 10,\n      velocity: (opts.startVelocity * 0.5) + (Math.random() * opts.startVelocity),\n      angle2D: -radAngle + ((0.5 * radSpread) - (Math.random() * radSpread)),\n      tiltAngle: Math.random() * Math.PI,\n      color: hexToRgb(opts.color),\n      shape: opts.shape,\n      tick: 0,\n      totalTicks: opts.ticks,\n      decay: opts.decay,\n      random: Math.random() + 5,\n      tiltSin: 0,\n      tiltCos: 0,\n      wobbleX: 0,\n      wobbleY: 0,\n      gravity: opts.gravity * 3,\n      ovalScalar: 0.6,\n      scalar: opts.scalar\n    };\n  }\n\n  function updateFetti(context, fetti) {\n    fetti.x += Math.cos(fetti.angle2D) * fetti.velocity;\n    fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;\n    fetti.wobble += 0.1;\n    fetti.velocity *= fetti.decay;\n    fetti.tiltAngle += 0.1;\n    fetti.tiltSin = Math.sin(fetti.tiltAngle);\n    fetti.tiltCos = Math.cos(fetti.tiltAngle);\n    fetti.random = Math.random() + 5;\n    fetti.wobbleX = fetti.x + ((10 * fetti.scalar) * Math.cos(fetti.wobble));\n    fetti.wobbleY = fetti.y + ((10 * fetti.scalar) * Math.sin(fetti.wobble));\n\n    var progress = (fetti.tick++) / fetti.totalTicks;\n\n    var x1 = fetti.x + (fetti.random * fetti.tiltCos);\n    var y1 = fetti.y + (fetti.random * fetti.tiltSin);\n    var x2 = fetti.wobbleX + (fetti.random * fetti.tiltCos);\n    var y2 = fetti.wobbleY + (fetti.random * fetti.tiltSin);\n\n    context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';\n    context.beginPath();\n\n    if (fetti.shape === 'circle') {\n      context.ellipse ?\n        context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) :\n        ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);\n    } else {\n      context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));\n      context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));\n      context.lineTo(Math.floor(x2), Math.floor(y2));\n      context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));\n    }\n\n    context.closePath();\n    context.fill();\n\n    return fetti.tick < fetti.totalTicks;\n  }\n\n  function animate(canvas, fettis, resizer, size, done) {\n    var animatingFettis = fettis.slice();\n    var context = canvas.getContext('2d');\n    var animationFrame;\n    var destroy;\n\n    var prom = promise(function (resolve) {\n      function onDone() {\n        animationFrame = destroy = null;\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        done();\n        resolve();\n      }\n\n      function update() {\n        if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {\n          size.width = canvas.width = workerSize.width;\n          size.height = canvas.height = workerSize.height;\n        }\n\n        if (!size.width && !size.height) {\n          resizer(canvas);\n          size.width = canvas.width;\n          size.height = canvas.height;\n        }\n\n        context.clearRect(0, 0, size.width, size.height);\n\n        animatingFettis = animatingFettis.filter(function (fetti) {\n          return updateFetti(context, fetti);\n        });\n\n        if (animatingFettis.length) {\n          animationFrame = raf.frame(update);\n        } else {\n          onDone();\n        }\n      }\n\n      animationFrame = raf.frame(update);\n      destroy = onDone;\n    });\n\n    return {\n      addFettis: function (fettis) {\n        animatingFettis = animatingFettis.concat(fettis);\n\n        return prom;\n      },\n      canvas: canvas,\n      promise: prom,\n      reset: function () {\n        if (animationFrame) {\n          raf.cancel(animationFrame);\n        }\n\n        if (destroy) {\n          destroy();\n        }\n      }\n    };\n  }\n\n  function confettiCannon(canvas, globalOpts) {\n    var isLibCanvas = !canvas;\n    var allowResize = !!prop(globalOpts || {}, 'resize');\n    var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);\n    var shouldUseWorker = canUseWorker && !!prop(globalOpts || {}, 'useWorker');\n    var worker = shouldUseWorker ? getWorker() : null;\n    var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;\n    var initialized = (canvas && worker) ? !!canvas.__confetti_initialized : false;\n    var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;\n    var animationObj;\n\n    function fireLocal(options, size, done) {\n      var particleCount = prop(options, 'particleCount', onlyPositiveInt);\n      var angle = prop(options, 'angle', Number);\n      var spread = prop(options, 'spread', Number);\n      var startVelocity = prop(options, 'startVelocity', Number);\n      var decay = prop(options, 'decay', Number);\n      var gravity = prop(options, 'gravity', Number);\n      var colors = prop(options, 'colors');\n      var ticks = prop(options, 'ticks', Number);\n      var shapes = prop(options, 'shapes');\n      var scalar = prop(options, 'scalar');\n      var origin = getOrigin(options);\n\n      var temp = particleCount;\n      var fettis = [];\n\n      var startX = canvas.width * origin.x;\n      var startY = canvas.height * origin.y;\n\n      while (temp--) {\n        fettis.push(\n          randomPhysics({\n            x: startX,\n            y: startY,\n            angle: angle,\n            spread: spread,\n            startVelocity: startVelocity,\n            color: colors[temp % colors.length],\n            shape: shapes[randomInt(0, shapes.length)],\n            ticks: ticks,\n            decay: decay,\n            gravity: gravity,\n            scalar: scalar\n          })\n        );\n      }\n\n      // if we have a previous canvas already animating,\n      // add to it\n      if (animationObj) {\n        return animationObj.addFettis(fettis);\n      }\n\n      animationObj = animate(canvas, fettis, resizer, size , done);\n\n      return animationObj.promise;\n    }\n\n    function fire(options) {\n      var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);\n      var zIndex = prop(options, 'zIndex', Number);\n\n      if (disableForReducedMotion && preferLessMotion) {\n        return promise(function (resolve) {\n          resolve();\n        });\n      }\n\n      if (isLibCanvas && animationObj) {\n        // use existing canvas from in-progress animation\n        canvas = animationObj.canvas;\n      } else if (isLibCanvas && !canvas) {\n        // create and initialize a new canvas\n        canvas = getCanvas(zIndex);\n        document.body.appendChild(canvas);\n      }\n\n      if (allowResize && !initialized) {\n        // initialize the size of a user-supplied canvas\n        resizer(canvas);\n      }\n\n      var size = {\n        width: canvas.width,\n        height: canvas.height\n      };\n\n      if (worker && !initialized) {\n        worker.init(canvas);\n      }\n\n      initialized = true;\n\n      if (worker) {\n        canvas.__confetti_initialized = true;\n      }\n\n      function onResize() {\n        if (worker) {\n          // TODO this really shouldn't be immediate, because it is expensive\n          var obj = {\n            getBoundingClientRect: function () {\n              if (!isLibCanvas) {\n                return canvas.getBoundingClientRect();\n              }\n            }\n          };\n\n          resizer(obj);\n\n          worker.postMessage({\n            resize: {\n              width: obj.width,\n              height: obj.height\n            }\n          });\n          return;\n        }\n\n        // don't actually query the size here, since this\n        // can execute frequently and rapidly\n        size.width = size.height = null;\n      }\n\n      function done() {\n        animationObj = null;\n\n        if (allowResize) {\n          global.removeEventListener('resize', onResize);\n        }\n\n        if (isLibCanvas && canvas) {\n          document.body.removeChild(canvas);\n          canvas = null;\n          initialized = false;\n        }\n      }\n\n      if (allowResize) {\n        global.addEventListener('resize', onResize, false);\n      }\n\n      if (worker) {\n        return worker.fire(options, size, done);\n      }\n\n      return fireLocal(options, size, done);\n    }\n\n    fire.reset = function () {\n      if (worker) {\n        worker.reset();\n      }\n\n      if (animationObj) {\n        animationObj.reset();\n      }\n    };\n\n    return fire;\n  }\n\n  module.exports = confettiCannon(null, { useWorker: true, resize: true });\n  module.exports.create = confettiCannon;\n}((function () {\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  return this;\n})(), module, false));\n\n// end source content\n\nexport default module.exports;\nexport var create = module.exports.create;\n","import { selectedWordsStore } from '../selected-words.store';\nimport { launchConfetti } from './confetti';\nimport { getWordKey, wordsPerLine } from './words';\nexport function isBingo({ columnId, wordId }) {\n    function isFilledVertically() {\n        let isFilled = true;\n        for (let i = 0; i < wordsPerLine; i++) {\n            const key = getWordKey({\n                columnId,\n                wordId: i,\n            });\n            isFilled = selectedWordsStore.isWordSelected(key);\n            if (!isFilled) {\n                break;\n            }\n        }\n        return isFilled;\n    }\n    function isFilledHorizontally() {\n        let isFilled = true;\n        for (let i = 0; i < wordsPerLine; i++) {\n            const key = getWordKey({\n                columnId: i,\n                wordId,\n            });\n            isFilled = selectedWordsStore.isWordSelected(key);\n            if (!isFilled) {\n                break;\n            }\n        }\n        return isFilled;\n    }\n    function isFilledLTRDiagonally() {\n        let wordIsOnTheLine = false;\n        let isFilled = true;\n        for (let i = 0; i < wordsPerLine; i++) {\n            const key = getWordKey({\n                columnId: i,\n                wordId: i,\n            });\n            if (!wordIsOnTheLine) {\n                wordIsOnTheLine = +wordId === i && +columnId === i;\n            }\n            isFilled = selectedWordsStore.isWordSelected(key);\n            if (!isFilled) {\n                break;\n            }\n        }\n        return wordIsOnTheLine && isFilled;\n    }\n    function isFilledRTLDiagonally() {\n        let wordIsOnTheLine = false;\n        let isFilled = true;\n        for (let i = 0; i < wordsPerLine; i++) {\n            const key = getWordKey({\n                columnId: wordsPerLine - 1 - i,\n                wordId: i,\n            });\n            if (!wordIsOnTheLine) {\n                wordIsOnTheLine = +wordId === i && +columnId === wordsPerLine - 1 - i;\n            }\n            isFilled = selectedWordsStore.isWordSelected(key);\n            if (!isFilled) {\n                break;\n            }\n        }\n        return wordIsOnTheLine && isFilled;\n    }\n    const bingo = isFilledHorizontally()\n        || isFilledVertically()\n        || isFilledRTLDiagonally()\n        || isFilledLTRDiagonally();\n    if (bingo) {\n        launchConfetti();\n    }\n    return bingo;\n}\n","import confetti from 'canvas-confetti';\nexport function launchConfetti() {\n    const count = 200;\n    const defaults = {\n        origin: { y: 0.7 }\n    };\n    function fire(particleRatio, opts) {\n        confetti(Object.assign({}, defaults, opts, {\n            particleCount: Math.floor(count * particleRatio)\n        }));\n    }\n    fire(0.25, {\n        spread: 26,\n        startVelocity: 55,\n    });\n    fire(0.2, {\n        spread: 60,\n    });\n    fire(0.35, {\n        spread: 100,\n        decay: 0.91,\n        scalar: 0.8\n    });\n    fire(0.1, {\n        spread: 120,\n        startVelocity: 25,\n        decay: 0.92,\n        scalar: 1.2\n    });\n    fire(0.1, {\n        spread: 120,\n        startVelocity: 45,\n    });\n}\n","<script lang=\"ts\">\n    export let words: string[][] = [];\n\n    import Word from './components/Word.svelte';\n    import { getWordKey } from './helpers/words';\n    import type { IndexProps } from './helpers/words';\n    import { isBingo } from './helpers/bingo';\n    import { selectedWordsStore } from './selected-words.store';\n\n    const onWordClick = ({ currentTarget }: TypedMouseEvent<HTMLDivElement>): void => {\n        const columnId = currentTarget.parentElement.dataset.columnId;\n        const wordId = currentTarget.dataset.id;\n        const key = getWordKey({ columnId, wordId })\n\n        selectedWordsStore.toggleWordState(key);\n\n        isBingo({ columnId, wordId });\n    }\n\n    const isWordSelected = (options: IndexProps): boolean => {\n        return selectedWordsStore.isWordSelected(getWordKey(options));\n    }\n</script>\n\n<button\n    data-testid=\"resetButton\"\n    class=\"resetButton\"\n    on:click={selectedWordsStore.reset}\n>\n    Reset\n</button>\n\n<div class=\"container\" data-testid=\"container\">\n    {#each words as wordGroup, columnId}\n        <div data-column-id={columnId}>\n            {#each wordGroup as word, wordId}\n                <Word\n                    on:click={onWordClick}\n                    name={word}\n                    isSelected={$selectedWordsStore && isWordSelected({ columnId, wordId })}\n                    wordId={wordId}\n                />\n            {/each}\n        </div>\n    {/each}\n</div>\n\n<style lang=\"scss\">\n    :global(body) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .container {\n        display: flex;\n        max-width: 100%;\n        margin: 0 auto;\n        user-select: none;\n        font-size: 2.4vw;\n\n        @media(min-width: 1080px) {\n            font-size: 1.8em;\n        }\n    }\n\n    .resetButton {\n        position: fixed;\n        top: 10%;\n        left: 50%;\n        transform: translateX(-50%);\n        background-color: white;\n        padding: .5em 1em;\n        font-size: 2em;\n    }\n</style>\n","import App from './App.svelte';\nimport { words } from './helpers/words';\nconst app = new App({\n    target: document.body,\n    props: {\n        words,\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","wholeText","wordId","isSelected","slice","words","wordsPerLine","getWordKey","columnId","subscriber_queue","selectedWordsStore","state","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","writable","assign","isWordSelected","key","_a","toggleWordState","reset","createSelectedWordsStore","module","main","global","isWorker","workerSize","canUseWorker","Worker","Blob","OffscreenCanvas","OffscreenCanvasRenderingContext2D","HTMLCanvasElement","prototype","transferControlToOffscreen","URL","createObjectURL","promise","func","ModulePromise","exports","Prom","frame","cancel","TIME","frames","lastFrameTime","worker","prom","resolves","raf","Math","floor","requestAnimationFrame","cancelAnimationFrame","cb","id","random","onFrame","time","setTimeout","timer","clearTimeout","getWorker","code","toString","join","e","undefined","console","warn","execute","postMessage","canvas","offscreen","fire","size","done","workerDone","msg","bind","decorate","defaults","particleCount","angle","spread","startVelocity","decay","gravity","ticks","x","y","shapes","zIndex","colors","disableForReducedMotion","scalar","prop","transform","val","convert","onlyPositiveInt","number","toDecimal","str","parseInt","setCanvasWindowSize","width","documentElement","clientWidth","height","clientHeight","setCanvasRectSize","rect","getBoundingClientRect","animate","fettis","resizer","animationFrame","destroy","animatingFettis","getContext","onDone","clearRect","fetti","cos","angle2D","velocity","sin","wobble","tiltAngle","tiltSin","tiltCos","wobbleX","wobbleY","progress","tick","totalTicks","x1","y1","x2","y2","fillStyle","color","g","beginPath","shape","ellipse","abs","ovalScalar","PI","radiusX","radiusY","rotation","startAngle","endAngle","antiClockwise","save","translate","rotate","scale","arc","restore","moveTo","lineTo","closePath","updateFetti","addFettis","concat","confettiCannon","globalOpts","animationObj","isLibCanvas","allowResize","globalDisableForReducedMotion","Boolean","initialized","__confetti_initialized","preferLessMotion","matchMedia","matches","fireLocal","opts","radAngle","radSpread","min","max","Number","origin","getOrigin","temp","startX","startY","String","replace","substring","style","position","top","left","pointerEvents","getCanvas","body","onResize","resize","useWorker","window","self","isBingo","bingo","isFilled","isFilledHorizontally","isFilledVertically","wordIsOnTheLine","isFilledRTLDiagonally","isFilledLTRDiagonally","particleRatio","confetti","launchConfetti","currentTarget","parentElement","dataset"],"mappings":"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"}